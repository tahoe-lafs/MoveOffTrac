# Docker compose file to support dev+ops activities
version: '3'
services:
  trac:
    build:
      context: docker/trac
      dockerfile: Dockerfile
      args:
        user: appuser
        group: appgroup
        uid: "${_UID:-1000}"
        gid: "${_GID:-1000}"
    volumes:
      - ./trac/project:/var/lib/appdata/project
      - ./trac/public_html:/var/lib/appdata/project/htdocs
      - ./trac/log:/var/lib/appdata/project/log
      - ./trac/trac.htdigest:/home/trac/trac.htdigest
      - ./trac/repos:/home/source/git
      - ./trac/backup:/var/lib/appdata/backup
      - ./helpers:/var/lib/appdata/helpers
    working_dir: /var/lib/appdata
    stdin_open: true
    tty: true
    hostname: trac.local
    container_name: trac.local
    ports:
      - "${TRAC_PORT:-8000}:${TRAC_PORT:-8000}/tcp"
    command: tracd --port ${TRAC_PORT:-8000} ./project
    network_mode: "bridge"
    # Prevents container to hang the host
    # Requires `... --compatibility run ...`
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  gitea:
    build: 
      context: docker/gitea
      dockerfile: Dockerfile
    volumes:
      - ./gitea/conf:/etc/gitea
      - ./gitea/data:/var/lib/gitea
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./trac:/var/lib/appdata/trac
      - ./trac2gitea:/var/lib/appdata/trac2gitea
      - ./gitea/backup:/var/lib/appdata/gitea/backup
    working_dir: /var/lib/appdata
    ports:
      - "3000:3000"
      - "2222:2222"
    #command: /bin/bash
    stdin_open: true
    tty: true
    hostname: gitea.local
    container_name: gitea.local
    network_mode: "bridge"
    # Prevents container to hang the host
    # Requires `... --compatibility run ...`
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  go-shell:
    build:
      context: docker/go
      dockerfile: Dockerfile
      args:
        user: appuser
        group: appgroup
        uid: "${_UID:-1000}"
        gid: "${_GID:-1000}"
    environment:
      - GOCACHE=/var/lib/appdata/.gocache
    volumes:
      - ./trac2gitea:/var/lib/appdata
      - ./.gocache:/var/lib/appdata/.gocache
    working_dir: /var/lib/appdata
    #command: /bin/bash
    stdin_open: true
    tty: true
    hostname: go-shell.local
    container_name: go-shell.local
    network_mode: "bridge"
    # Prevents container to hang the host
    # Requires `... --compatibility run ...`
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  terraform-shell:
    build:
      context: docker/terraform
      dockerfile: Dockerfile
      args:
        uid: "${_UID:-1000}"
        gid: "${_GID:-1000}"
    volumes:
      - .:/var/lib/appdata
    working_dir: /var/lib/appdata
    environment:
      # Required for Gandi resources
      - TF_VAR_gandi_url=${GANDI_URL}
      - TF_VAR_gandi_token=${GANDI_TOKEN}
      # Required for Hetzner resources
      - TF_VAR_hcloud_token=${HCLOUD_TOKEN}
    entrypoint: /bin/sh
    stdin_open: true
    tty: true
    hostname: terraform-shell.local
    container_name: terraform-shell.local
    network_mode: "bridge"
    # Prevents container to hang the host
    # Requires `... --compatibility run ...`
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 256M
